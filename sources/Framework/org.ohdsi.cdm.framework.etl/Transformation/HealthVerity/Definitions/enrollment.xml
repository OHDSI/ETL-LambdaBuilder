<QueryDefinition>
  <Query>
		with l as
		(
		SELECT distinct patient_state, patient_zip3
		FROM {sc}.enrollment
		where patient_zip3 is not null and patient_zip3 != ''
		),
		location as
		(
		SELECT distinct ROW_NUMBER() OVER(ORDER BY patient_state, patient_zip3) AS Id, patient_state, patient_zip3
		FROM l
		),
		a as
		(
		SELECT
		ch.person_id as PersonId,
		hvid,
		patient_gender,
		patient_year_of_birth,
		date_start,
		date_end,
		1 as benefit_type,
		data_vendor,
		patient_zip3,
		patient_state
		FROM {sc}.enrollment
		JOIN {ch_sc}._chunks ch ON ch.ChunkId = {0} AND hvid = ch.PERSON_SOURCE_VALUE
		where lower(benefit_type) = 'medical'

		union

		SELECT
		ch.person_id as PersonId,
		hvid,
		patient_gender,
		patient_year_of_birth,
		date_start,
		date_end,
		2 as benefit_type,
		data_vendor,
		patient_zip3,
		patient_state
		FROM {sc}.enrollment
		JOIN {ch_sc}._chunks ch ON ch.ChunkId = {0} AND hvid = ch.PERSON_SOURCE_VALUE
		where lower(benefit_type) = 'pharmacy' or benefit_type is null
		)

		select a.*, l.Id as LocationId
		from a
		left join location l on l.patient_zip3 = a.patient_zip3 and coalesce(l.patient_state, '') = coalesce(a.patient_state, '')
		order by 1
	</Query>
  <Persons>
    <PersonDefinition>
      <PersonId>PersonId</PersonId>
      <PersonSourceValue>hvid</PersonSourceValue>
      <Gender>patient_gender</Gender>
      <YearOfBirth>patient_year_of_birth</YearOfBirth>
      <StartDate>date_start</StartDate>
      <EndDate>date_end</EndDate>
      <PeriodTypeConceptId>benefit_type</PeriodTypeConceptId>
			<LocationId>LocationId</LocationId>
			<AdditionalFields>
        <string>data_vendor</string>
      </AdditionalFields>
    </PersonDefinition>
  </Persons>
</QueryDefinition>